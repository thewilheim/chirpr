services:
  postgres:
    image: postgres:14
    restart: always
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=example
      - POSTGRES_DB=chirpr-local
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    image: vilheim/chirpr:api-latest
    build:
      context: ./api/
      target: development
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=5042
      - AppSettings__Frontend=https://www.chirpr.au
      - AppSettings__Domain=chirpr.au
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=chirpr-local;Username=postgres;Password=example
      - ConnectionStrings__MinioAccessKey=admin
      - ConnectionStrings__MinioSecretKey=password123
      - ConnectionStrings__MinioEndpoint=storage:9000
      - ConnectionStrings__BlobUrl=https://media.chirpr.au
      - Jwt__Key=test1232131231231231231223131331
      - Jwt__Issuer=https://api.chirpr.au
      - Jwt__Audience=https://www.chirpr.au
      - Jwt__TokenLifetimeMinutes=15
    ports:
      - "5042:5042"
    depends_on:
      - postgres
      - storage

  ui:
    image: vilheim/chirpr:ui-latest
    build:
      context: ./ui/
      args:
        - VITE_HOST_URL=${VITE_HOST_URL}
    environment:
      - VITE_HOST_URL=${VITE_HOST_URL}
      - VITE_BLOB_URL=${VITE_BLOB_URL}
      - NODE_ENV=development
    env_file:
      - .env
    ports:
      - "5173:5173"
    depends_on:
      - server

  storage:
    image: minio/minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - storage:/data
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password123
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  caddy:
    image: caddy:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /root/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - ui
      - server
    restart: unless-stopped

volumes:
  db:
  storage:
  caddy_data:
  caddy_config:
